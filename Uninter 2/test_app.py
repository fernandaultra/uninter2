"""
Arquivo de teste para verificar se a aplica√ß√£o est√° funcionando
"""

import sys
import os

# Adiciona o diret√≥rio atual ao path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_imports():
    """Testa se todas as importa√ß√µes est√£o funcionando"""
    try:
        print("Testando importa√ß√µes...")
        
        # Testa importa√ß√µes b√°sicas
        from flask import Flask
        print("‚úì Flask importado com sucesso")
        
        from dotenv import load_dotenv
        print("‚úì python-dotenv importado com sucesso")
        
        # Testa importa√ß√µes dos servi√ßos
        from services.base_service import BaseService
        print("‚úì BaseService importado com sucesso")
        
        from services.google_atelie_service import GoogleAtelieService
        print("‚úì GoogleAtelieService importado com sucesso")
        
        from services.senai_service import SenaiService
        print("‚úì SenaiService importado com sucesso")
        
        from services.gov_br_service import GovBrService
        print("‚úì GovBrService importado com sucesso")
        
        from services.ciee_service import CieeService
        print("‚úì CieeService importado com sucesso")
        
        # Testa importa√ß√µes das rotas
        from routes.api_routes import api_bp
        print("‚úì api_bp importado com sucesso")
        
        # Testa importa√ß√µes dos utilit√°rios
        from utils.sheets_manager import SheetsManager
        print("‚úì SheetsManager importado com sucesso")
        
        print("\nüéâ Todas as importa√ß√µes est√£o funcionando!")
        return True
        
    except ImportError as e:
        print(f"‚ùå Erro na importa√ß√£o: {e}")
        return False
    except Exception as e:
        print(f"‚ùå Erro inesperado: {e}")
        return False

def test_app_creation():
    """Testa se a aplica√ß√£o Flask pode ser criada"""
    try:
        print("\nTestando cria√ß√£o da aplica√ß√£o...")
        
        from app import create_app
        app = create_app()
        
        print("‚úì Aplica√ß√£o Flask criada com sucesso")
        return True
        
    except Exception as e:
        print(f"‚ùå Erro ao criar aplica√ß√£o: {e}")
        return False

if __name__ == "__main__":
    print("üß™ Iniciando testes...\n")
    
    # Testa importa√ß√µes
    imports_ok = test_imports()
    
    # Testa cria√ß√£o da aplica√ß√£o
    app_ok = test_app_creation()
    
    if imports_ok and app_ok:
        print("\n‚úÖ Todos os testes passaram! A aplica√ß√£o est√° pronta para uso.")
    else:
        print("\n‚ùå Alguns testes falharam. Verifique os erros acima.")
        sys.exit(1)
